// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alarm_center_video.proto

#ifndef PROTOBUF_alarm_5fcenter_5fvideo_2eproto__INCLUDED
#define PROTOBUF_alarm_5fcenter_5fvideo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace alarm_center_video {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

class alarm_info;
class alarm_text;
class bind_info;
class camera_info;
class dev_info;
class hisroty_record;
class is_show_mgr_dlg;
class reply;
class request;
class zone_uuid;

// ===================================================================

class request : public ::google::protobuf::Message {
 public:
  request();
  virtual ~request();

  request(const request& from);

  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const request& default_instance();

  void Swap(request* other);

  // implements Message ----------------------------------------------

  inline request* New() const { return New(NULL); }

  request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const request& from);
  void MergeFrom(const request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string place_holder = 1;
  void clear_place_holder();
  static const int kPlaceHolderFieldNumber = 1;
  const ::std::string& place_holder() const;
  void set_place_holder(const ::std::string& value);
  void set_place_holder(const char* value);
  void set_place_holder(const char* value, size_t size);
  ::std::string* mutable_place_holder();
  ::std::string* release_place_holder();
  void set_allocated_place_holder(::std::string* place_holder);

  // @@protoc_insertion_point(class_scope:alarm_center_video.request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr place_holder_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static request* default_instance_;
};
// -------------------------------------------------------------------

class reply : public ::google::protobuf::Message {
 public:
  reply();
  virtual ~reply();

  reply(const reply& from);

  inline reply& operator=(const reply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const reply& default_instance();

  void Swap(reply* other);

  // implements Message ----------------------------------------------

  inline reply* New() const { return New(NULL); }

  reply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const reply& from);
  void MergeFrom(const reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string place_holder = 1;
  void clear_place_holder();
  static const int kPlaceHolderFieldNumber = 1;
  const ::std::string& place_holder() const;
  void set_place_holder(const ::std::string& value);
  void set_place_holder(const char* value);
  void set_place_holder(const char* value, size_t size);
  ::std::string* mutable_place_holder();
  ::std::string* release_place_holder();
  void set_allocated_place_holder(::std::string* place_holder);

  // @@protoc_insertion_point(class_scope:alarm_center_video.reply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr place_holder_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static reply* default_instance_;
};
// -------------------------------------------------------------------

class is_show_mgr_dlg : public ::google::protobuf::Message {
 public:
  is_show_mgr_dlg();
  virtual ~is_show_mgr_dlg();

  is_show_mgr_dlg(const is_show_mgr_dlg& from);

  inline is_show_mgr_dlg& operator=(const is_show_mgr_dlg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const is_show_mgr_dlg& default_instance();

  void Swap(is_show_mgr_dlg* other);

  // implements Message ----------------------------------------------

  inline is_show_mgr_dlg* New() const { return New(NULL); }

  is_show_mgr_dlg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const is_show_mgr_dlg& from);
  void MergeFrom(const is_show_mgr_dlg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(is_show_mgr_dlg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string show = 1;
  void clear_show();
  static const int kShowFieldNumber = 1;
  const ::std::string& show() const;
  void set_show(const ::std::string& value);
  void set_show(const char* value);
  void set_show(const char* value, size_t size);
  ::std::string* mutable_show();
  ::std::string* release_show();
  void set_allocated_show(::std::string* show);

  // optional int32 user_level = 2;
  void clear_user_level();
  static const int kUserLevelFieldNumber = 2;
  ::google::protobuf::int32 user_level() const;
  void set_user_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:alarm_center_video.is_show_mgr_dlg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr show_;
  ::google::protobuf::int32 user_level_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static is_show_mgr_dlg* default_instance_;
};
// -------------------------------------------------------------------

class zone_uuid : public ::google::protobuf::Message {
 public:
  zone_uuid();
  virtual ~zone_uuid();

  zone_uuid(const zone_uuid& from);

  inline zone_uuid& operator=(const zone_uuid& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const zone_uuid& default_instance();

  void Swap(zone_uuid* other);

  // implements Message ----------------------------------------------

  inline zone_uuid* New() const { return New(NULL); }

  zone_uuid* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const zone_uuid& from);
  void MergeFrom(const zone_uuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(zone_uuid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ademco_id = 1;
  void clear_ademco_id();
  static const int kAdemcoIdFieldNumber = 1;
  ::google::protobuf::int32 ademco_id() const;
  void set_ademco_id(::google::protobuf::int32 value);

  // optional int32 zone_value = 2;
  void clear_zone_value();
  static const int kZoneValueFieldNumber = 2;
  ::google::protobuf::int32 zone_value() const;
  void set_zone_value(::google::protobuf::int32 value);

  // optional int32 gg = 3;
  void clear_gg();
  static const int kGgFieldNumber = 3;
  ::google::protobuf::int32 gg() const;
  void set_gg(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:alarm_center_video.zone_uuid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 ademco_id_;
  ::google::protobuf::int32 zone_value_;
  ::google::protobuf::int32 gg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static zone_uuid* default_instance_;
};
// -------------------------------------------------------------------

class camera_info : public ::google::protobuf::Message {
 public:
  camera_info();
  virtual ~camera_info();

  camera_info(const camera_info& from);

  inline camera_info& operator=(const camera_info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const camera_info& default_instance();

  void Swap(camera_info* other);

  // implements Message ----------------------------------------------

  inline camera_info* New() const { return New(NULL); }

  camera_info* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const camera_info& from);
  void MergeFrom(const camera_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(camera_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dev_id = 1;
  void clear_dev_id();
  static const int kDevIdFieldNumber = 1;
  ::google::protobuf::int32 dev_id() const;
  void set_dev_id(::google::protobuf::int32 value);

  // optional int32 productor_type = 2;
  void clear_productor_type();
  static const int kProductorTypeFieldNumber = 2;
  ::google::protobuf::int32 productor_type() const;
  void set_productor_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:alarm_center_video.camera_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 dev_id_;
  ::google::protobuf::int32 productor_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static camera_info* default_instance_;
};
// -------------------------------------------------------------------

class dev_info : public ::google::protobuf::Message {
 public:
  dev_info();
  virtual ~dev_info();

  dev_info(const dev_info& from);

  inline dev_info& operator=(const dev_info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dev_info& default_instance();

  void Swap(dev_info* other);

  // implements Message ----------------------------------------------

  inline dev_info* New() const { return New(NULL); }

  dev_info* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dev_info& from);
  void MergeFrom(const dev_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(dev_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dev_id = 1;
  void clear_dev_id();
  static const int kDevIdFieldNumber = 1;
  ::google::protobuf::int32 dev_id() const;
  void set_dev_id(::google::protobuf::int32 value);

  // optional int32 productor_type = 2;
  void clear_productor_type();
  static const int kProductorTypeFieldNumber = 2;
  ::google::protobuf::int32 productor_type() const;
  void set_productor_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:alarm_center_video.dev_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 dev_id_;
  ::google::protobuf::int32 productor_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static dev_info* default_instance_;
};
// -------------------------------------------------------------------

class alarm_text : public ::google::protobuf::Message {
 public:
  alarm_text();
  virtual ~alarm_text();

  alarm_text(const alarm_text& from);

  inline alarm_text& operator=(const alarm_text& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alarm_text& default_instance();

  void Swap(alarm_text* other);

  // implements Message ----------------------------------------------

  inline alarm_text* New() const { return New(NULL); }

  alarm_text* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const alarm_text& from);
  void MergeFrom(const alarm_text& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(alarm_text* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 zone_value = 1;
  void clear_zone_value();
  static const int kZoneValueFieldNumber = 1;
  ::google::protobuf::int32 zone_value() const;
  void set_zone_value(::google::protobuf::int32 value);

  // optional int32 sub_zone = 2;
  void clear_sub_zone();
  static const int kSubZoneFieldNumber = 2;
  ::google::protobuf::int32 sub_zone() const;
  void set_sub_zone(::google::protobuf::int32 value);

  // optional int32 event_code = 3;
  void clear_event_code();
  static const int kEventCodeFieldNumber = 3;
  ::google::protobuf::int32 event_code() const;
  void set_event_code(::google::protobuf::int32 value);

  // optional string alarm_txt = 4;
  void clear_alarm_txt();
  static const int kAlarmTxtFieldNumber = 4;
  const ::std::string& alarm_txt() const;
  void set_alarm_txt(const ::std::string& value);
  void set_alarm_txt(const char* value);
  void set_alarm_txt(const char* value, size_t size);
  ::std::string* mutable_alarm_txt();
  ::std::string* release_alarm_txt();
  void set_allocated_alarm_txt(::std::string* alarm_txt);

  // @@protoc_insertion_point(class_scope:alarm_center_video.alarm_text)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 zone_value_;
  ::google::protobuf::int32 sub_zone_;
  ::google::protobuf::internal::ArenaStringPtr alarm_txt_;
  ::google::protobuf::int32 event_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static alarm_text* default_instance_;
};
// -------------------------------------------------------------------

class alarm_info : public ::google::protobuf::Message {
 public:
  alarm_info();
  virtual ~alarm_info();

  alarm_info(const alarm_info& from);

  inline alarm_info& operator=(const alarm_info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alarm_info& default_instance();

  void Swap(alarm_info* other);

  // implements Message ----------------------------------------------

  inline alarm_info* New() const { return New(NULL); }

  alarm_info* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const alarm_info& from);
  void MergeFrom(const alarm_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(alarm_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .alarm_center_video.dev_info devinfo = 1;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevinfoFieldNumber = 1;
  const ::alarm_center_video::dev_info& devinfo() const;
  ::alarm_center_video::dev_info* mutable_devinfo();
  ::alarm_center_video::dev_info* release_devinfo();
  void set_allocated_devinfo(::alarm_center_video::dev_info* devinfo);

  // optional .alarm_center_video.zone_uuid zone_uuid = 2;
  bool has_zone_uuid() const;
  void clear_zone_uuid();
  static const int kZoneUuidFieldNumber = 2;
  const ::alarm_center_video::zone_uuid& zone_uuid() const;
  ::alarm_center_video::zone_uuid* mutable_zone_uuid();
  ::alarm_center_video::zone_uuid* release_zone_uuid();
  void set_allocated_zone_uuid(::alarm_center_video::zone_uuid* zone_uuid);

  // optional .alarm_center_video.alarm_text alarm_txt = 3;
  bool has_alarm_txt() const;
  void clear_alarm_txt();
  static const int kAlarmTxtFieldNumber = 3;
  const ::alarm_center_video::alarm_text& alarm_txt() const;
  ::alarm_center_video::alarm_text* mutable_alarm_txt();
  ::alarm_center_video::alarm_text* release_alarm_txt();
  void set_allocated_alarm_txt(::alarm_center_video::alarm_text* alarm_txt);

  // @@protoc_insertion_point(class_scope:alarm_center_video.alarm_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::alarm_center_video::dev_info* devinfo_;
  ::alarm_center_video::zone_uuid* zone_uuid_;
  ::alarm_center_video::alarm_text* alarm_txt_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static alarm_info* default_instance_;
};
// -------------------------------------------------------------------

class bind_info : public ::google::protobuf::Message {
 public:
  bind_info();
  virtual ~bind_info();

  bind_info(const bind_info& from);

  inline bind_info& operator=(const bind_info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bind_info& default_instance();

  void Swap(bind_info* other);

  // implements Message ----------------------------------------------

  inline bind_info* New() const { return New(NULL); }

  bind_info* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bind_info& from);
  void MergeFrom(const bind_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(bind_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .alarm_center_video.zone_uuid uuid = 1;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::alarm_center_video::zone_uuid& uuid() const;
  ::alarm_center_video::zone_uuid* mutable_uuid();
  ::alarm_center_video::zone_uuid* release_uuid();
  void set_allocated_uuid(::alarm_center_video::zone_uuid* uuid);

  // optional .alarm_center_video.dev_info dev = 2;
  bool has_dev() const;
  void clear_dev();
  static const int kDevFieldNumber = 2;
  const ::alarm_center_video::dev_info& dev() const;
  ::alarm_center_video::dev_info* mutable_dev();
  ::alarm_center_video::dev_info* release_dev();
  void set_allocated_dev(::alarm_center_video::dev_info* dev);

  // optional bool bind = 3;
  void clear_bind();
  static const int kBindFieldNumber = 3;
  bool bind() const;
  void set_bind(bool value);

  // optional bool auto_popup = 4;
  void clear_auto_popup();
  static const int kAutoPopupFieldNumber = 4;
  bool auto_popup() const;
  void set_auto_popup(bool value);

  // @@protoc_insertion_point(class_scope:alarm_center_video.bind_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::alarm_center_video::zone_uuid* uuid_;
  ::alarm_center_video::dev_info* dev_;
  bool bind_;
  bool auto_popup_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static bind_info* default_instance_;
};
// -------------------------------------------------------------------

class hisroty_record : public ::google::protobuf::Message {
 public:
  hisroty_record();
  virtual ~hisroty_record();

  hisroty_record(const hisroty_record& from);

  inline hisroty_record& operator=(const hisroty_record& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hisroty_record& default_instance();

  void Swap(hisroty_record* other);

  // implements Message ----------------------------------------------

  inline hisroty_record* New() const { return New(NULL); }

  hisroty_record* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hisroty_record& from);
  void MergeFrom(const hisroty_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hisroty_record* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ademco_id = 1;
  void clear_ademco_id();
  static const int kAdemcoIdFieldNumber = 1;
  ::google::protobuf::int32 ademco_id() const;
  void set_ademco_id(::google::protobuf::int32 value);

  // optional int32 zone_value = 2;
  void clear_zone_value();
  static const int kZoneValueFieldNumber = 2;
  ::google::protobuf::int32 zone_value() const;
  void set_zone_value(::google::protobuf::int32 value);

  // optional string record = 3;
  void clear_record();
  static const int kRecordFieldNumber = 3;
  const ::std::string& record() const;
  void set_record(const ::std::string& value);
  void set_record(const char* value);
  void set_record(const char* value, size_t size);
  ::std::string* mutable_record();
  ::std::string* release_record();
  void set_allocated_record(::std::string* record);

  // optional string timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // @@protoc_insertion_point(class_scope:alarm_center_video.hisroty_record)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 ademco_id_;
  ::google::protobuf::int32 zone_value_;
  ::google::protobuf::internal::ArenaStringPtr record_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_AssignDesc_alarm_5fcenter_5fvideo_2eproto();
  friend void protobuf_ShutdownFile_alarm_5fcenter_5fvideo_2eproto();

  void InitAsDefaultInstance();
  static hisroty_record* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// request

// optional string place_holder = 1;
inline void request::clear_place_holder() {
  place_holder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& request::place_holder() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.request.place_holder)
  return place_holder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void request::set_place_holder(const ::std::string& value) {
  
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarm_center_video.request.place_holder)
}
inline void request::set_place_holder(const char* value) {
  
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarm_center_video.request.place_holder)
}
inline void request::set_place_holder(const char* value, size_t size) {
  
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarm_center_video.request.place_holder)
}
inline ::std::string* request::mutable_place_holder() {
  
  // @@protoc_insertion_point(field_mutable:alarm_center_video.request.place_holder)
  return place_holder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* request::release_place_holder() {
  // @@protoc_insertion_point(field_release:alarm_center_video.request.place_holder)
  
  return place_holder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void request::set_allocated_place_holder(::std::string* place_holder) {
  if (place_holder != NULL) {
    
  } else {
    
  }
  place_holder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), place_holder);
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.request.place_holder)
}

// -------------------------------------------------------------------

// reply

// optional string place_holder = 1;
inline void reply::clear_place_holder() {
  place_holder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& reply::place_holder() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.reply.place_holder)
  return place_holder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void reply::set_place_holder(const ::std::string& value) {
  
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarm_center_video.reply.place_holder)
}
inline void reply::set_place_holder(const char* value) {
  
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarm_center_video.reply.place_holder)
}
inline void reply::set_place_holder(const char* value, size_t size) {
  
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarm_center_video.reply.place_holder)
}
inline ::std::string* reply::mutable_place_holder() {
  
  // @@protoc_insertion_point(field_mutable:alarm_center_video.reply.place_holder)
  return place_holder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* reply::release_place_holder() {
  // @@protoc_insertion_point(field_release:alarm_center_video.reply.place_holder)
  
  return place_holder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void reply::set_allocated_place_holder(::std::string* place_holder) {
  if (place_holder != NULL) {
    
  } else {
    
  }
  place_holder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), place_holder);
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.reply.place_holder)
}

// -------------------------------------------------------------------

// is_show_mgr_dlg

// optional string show = 1;
inline void is_show_mgr_dlg::clear_show() {
  show_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& is_show_mgr_dlg::show() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.is_show_mgr_dlg.show)
  return show_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void is_show_mgr_dlg::set_show(const ::std::string& value) {
  
  show_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarm_center_video.is_show_mgr_dlg.show)
}
inline void is_show_mgr_dlg::set_show(const char* value) {
  
  show_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarm_center_video.is_show_mgr_dlg.show)
}
inline void is_show_mgr_dlg::set_show(const char* value, size_t size) {
  
  show_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarm_center_video.is_show_mgr_dlg.show)
}
inline ::std::string* is_show_mgr_dlg::mutable_show() {
  
  // @@protoc_insertion_point(field_mutable:alarm_center_video.is_show_mgr_dlg.show)
  return show_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* is_show_mgr_dlg::release_show() {
  // @@protoc_insertion_point(field_release:alarm_center_video.is_show_mgr_dlg.show)
  
  return show_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void is_show_mgr_dlg::set_allocated_show(::std::string* show) {
  if (show != NULL) {
    
  } else {
    
  }
  show_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), show);
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.is_show_mgr_dlg.show)
}

// optional int32 user_level = 2;
inline void is_show_mgr_dlg::clear_user_level() {
  user_level_ = 0;
}
inline ::google::protobuf::int32 is_show_mgr_dlg::user_level() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.is_show_mgr_dlg.user_level)
  return user_level_;
}
inline void is_show_mgr_dlg::set_user_level(::google::protobuf::int32 value) {
  
  user_level_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.is_show_mgr_dlg.user_level)
}

// -------------------------------------------------------------------

// zone_uuid

// optional int32 ademco_id = 1;
inline void zone_uuid::clear_ademco_id() {
  ademco_id_ = 0;
}
inline ::google::protobuf::int32 zone_uuid::ademco_id() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.zone_uuid.ademco_id)
  return ademco_id_;
}
inline void zone_uuid::set_ademco_id(::google::protobuf::int32 value) {
  
  ademco_id_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.zone_uuid.ademco_id)
}

// optional int32 zone_value = 2;
inline void zone_uuid::clear_zone_value() {
  zone_value_ = 0;
}
inline ::google::protobuf::int32 zone_uuid::zone_value() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.zone_uuid.zone_value)
  return zone_value_;
}
inline void zone_uuid::set_zone_value(::google::protobuf::int32 value) {
  
  zone_value_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.zone_uuid.zone_value)
}

// optional int32 gg = 3;
inline void zone_uuid::clear_gg() {
  gg_ = 0;
}
inline ::google::protobuf::int32 zone_uuid::gg() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.zone_uuid.gg)
  return gg_;
}
inline void zone_uuid::set_gg(::google::protobuf::int32 value) {
  
  gg_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.zone_uuid.gg)
}

// -------------------------------------------------------------------

// camera_info

// optional int32 dev_id = 1;
inline void camera_info::clear_dev_id() {
  dev_id_ = 0;
}
inline ::google::protobuf::int32 camera_info::dev_id() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.camera_info.dev_id)
  return dev_id_;
}
inline void camera_info::set_dev_id(::google::protobuf::int32 value) {
  
  dev_id_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.camera_info.dev_id)
}

// optional int32 productor_type = 2;
inline void camera_info::clear_productor_type() {
  productor_type_ = 0;
}
inline ::google::protobuf::int32 camera_info::productor_type() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.camera_info.productor_type)
  return productor_type_;
}
inline void camera_info::set_productor_type(::google::protobuf::int32 value) {
  
  productor_type_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.camera_info.productor_type)
}

// -------------------------------------------------------------------

// dev_info

// optional int32 dev_id = 1;
inline void dev_info::clear_dev_id() {
  dev_id_ = 0;
}
inline ::google::protobuf::int32 dev_info::dev_id() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.dev_info.dev_id)
  return dev_id_;
}
inline void dev_info::set_dev_id(::google::protobuf::int32 value) {
  
  dev_id_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.dev_info.dev_id)
}

// optional int32 productor_type = 2;
inline void dev_info::clear_productor_type() {
  productor_type_ = 0;
}
inline ::google::protobuf::int32 dev_info::productor_type() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.dev_info.productor_type)
  return productor_type_;
}
inline void dev_info::set_productor_type(::google::protobuf::int32 value) {
  
  productor_type_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.dev_info.productor_type)
}

// -------------------------------------------------------------------

// alarm_text

// optional int32 zone_value = 1;
inline void alarm_text::clear_zone_value() {
  zone_value_ = 0;
}
inline ::google::protobuf::int32 alarm_text::zone_value() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_text.zone_value)
  return zone_value_;
}
inline void alarm_text::set_zone_value(::google::protobuf::int32 value) {
  
  zone_value_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.alarm_text.zone_value)
}

// optional int32 sub_zone = 2;
inline void alarm_text::clear_sub_zone() {
  sub_zone_ = 0;
}
inline ::google::protobuf::int32 alarm_text::sub_zone() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_text.sub_zone)
  return sub_zone_;
}
inline void alarm_text::set_sub_zone(::google::protobuf::int32 value) {
  
  sub_zone_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.alarm_text.sub_zone)
}

// optional int32 event_code = 3;
inline void alarm_text::clear_event_code() {
  event_code_ = 0;
}
inline ::google::protobuf::int32 alarm_text::event_code() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_text.event_code)
  return event_code_;
}
inline void alarm_text::set_event_code(::google::protobuf::int32 value) {
  
  event_code_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.alarm_text.event_code)
}

// optional string alarm_txt = 4;
inline void alarm_text::clear_alarm_txt() {
  alarm_txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& alarm_text::alarm_txt() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_text.alarm_txt)
  return alarm_txt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void alarm_text::set_alarm_txt(const ::std::string& value) {
  
  alarm_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarm_center_video.alarm_text.alarm_txt)
}
inline void alarm_text::set_alarm_txt(const char* value) {
  
  alarm_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarm_center_video.alarm_text.alarm_txt)
}
inline void alarm_text::set_alarm_txt(const char* value, size_t size) {
  
  alarm_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarm_center_video.alarm_text.alarm_txt)
}
inline ::std::string* alarm_text::mutable_alarm_txt() {
  
  // @@protoc_insertion_point(field_mutable:alarm_center_video.alarm_text.alarm_txt)
  return alarm_txt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* alarm_text::release_alarm_txt() {
  // @@protoc_insertion_point(field_release:alarm_center_video.alarm_text.alarm_txt)
  
  return alarm_txt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void alarm_text::set_allocated_alarm_txt(::std::string* alarm_txt) {
  if (alarm_txt != NULL) {
    
  } else {
    
  }
  alarm_txt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarm_txt);
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.alarm_text.alarm_txt)
}

// -------------------------------------------------------------------

// alarm_info

// optional .alarm_center_video.dev_info devinfo = 1;
inline bool alarm_info::has_devinfo() const {
  return !_is_default_instance_ && devinfo_ != NULL;
}
inline void alarm_info::clear_devinfo() {
  if (GetArenaNoVirtual() == NULL && devinfo_ != NULL) delete devinfo_;
  devinfo_ = NULL;
}
inline const ::alarm_center_video::dev_info& alarm_info::devinfo() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_info.devinfo)
  return devinfo_ != NULL ? *devinfo_ : *default_instance_->devinfo_;
}
inline ::alarm_center_video::dev_info* alarm_info::mutable_devinfo() {
  
  if (devinfo_ == NULL) {
    devinfo_ = new ::alarm_center_video::dev_info;
  }
  // @@protoc_insertion_point(field_mutable:alarm_center_video.alarm_info.devinfo)
  return devinfo_;
}
inline ::alarm_center_video::dev_info* alarm_info::release_devinfo() {
  // @@protoc_insertion_point(field_release:alarm_center_video.alarm_info.devinfo)
  
  ::alarm_center_video::dev_info* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
inline void alarm_info::set_allocated_devinfo(::alarm_center_video::dev_info* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.alarm_info.devinfo)
}

// optional .alarm_center_video.zone_uuid zone_uuid = 2;
inline bool alarm_info::has_zone_uuid() const {
  return !_is_default_instance_ && zone_uuid_ != NULL;
}
inline void alarm_info::clear_zone_uuid() {
  if (GetArenaNoVirtual() == NULL && zone_uuid_ != NULL) delete zone_uuid_;
  zone_uuid_ = NULL;
}
inline const ::alarm_center_video::zone_uuid& alarm_info::zone_uuid() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_info.zone_uuid)
  return zone_uuid_ != NULL ? *zone_uuid_ : *default_instance_->zone_uuid_;
}
inline ::alarm_center_video::zone_uuid* alarm_info::mutable_zone_uuid() {
  
  if (zone_uuid_ == NULL) {
    zone_uuid_ = new ::alarm_center_video::zone_uuid;
  }
  // @@protoc_insertion_point(field_mutable:alarm_center_video.alarm_info.zone_uuid)
  return zone_uuid_;
}
inline ::alarm_center_video::zone_uuid* alarm_info::release_zone_uuid() {
  // @@protoc_insertion_point(field_release:alarm_center_video.alarm_info.zone_uuid)
  
  ::alarm_center_video::zone_uuid* temp = zone_uuid_;
  zone_uuid_ = NULL;
  return temp;
}
inline void alarm_info::set_allocated_zone_uuid(::alarm_center_video::zone_uuid* zone_uuid) {
  delete zone_uuid_;
  zone_uuid_ = zone_uuid;
  if (zone_uuid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.alarm_info.zone_uuid)
}

// optional .alarm_center_video.alarm_text alarm_txt = 3;
inline bool alarm_info::has_alarm_txt() const {
  return !_is_default_instance_ && alarm_txt_ != NULL;
}
inline void alarm_info::clear_alarm_txt() {
  if (GetArenaNoVirtual() == NULL && alarm_txt_ != NULL) delete alarm_txt_;
  alarm_txt_ = NULL;
}
inline const ::alarm_center_video::alarm_text& alarm_info::alarm_txt() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.alarm_info.alarm_txt)
  return alarm_txt_ != NULL ? *alarm_txt_ : *default_instance_->alarm_txt_;
}
inline ::alarm_center_video::alarm_text* alarm_info::mutable_alarm_txt() {
  
  if (alarm_txt_ == NULL) {
    alarm_txt_ = new ::alarm_center_video::alarm_text;
  }
  // @@protoc_insertion_point(field_mutable:alarm_center_video.alarm_info.alarm_txt)
  return alarm_txt_;
}
inline ::alarm_center_video::alarm_text* alarm_info::release_alarm_txt() {
  // @@protoc_insertion_point(field_release:alarm_center_video.alarm_info.alarm_txt)
  
  ::alarm_center_video::alarm_text* temp = alarm_txt_;
  alarm_txt_ = NULL;
  return temp;
}
inline void alarm_info::set_allocated_alarm_txt(::alarm_center_video::alarm_text* alarm_txt) {
  delete alarm_txt_;
  alarm_txt_ = alarm_txt;
  if (alarm_txt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.alarm_info.alarm_txt)
}

// -------------------------------------------------------------------

// bind_info

// optional .alarm_center_video.zone_uuid uuid = 1;
inline bool bind_info::has_uuid() const {
  return !_is_default_instance_ && uuid_ != NULL;
}
inline void bind_info::clear_uuid() {
  if (GetArenaNoVirtual() == NULL && uuid_ != NULL) delete uuid_;
  uuid_ = NULL;
}
inline const ::alarm_center_video::zone_uuid& bind_info::uuid() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.bind_info.uuid)
  return uuid_ != NULL ? *uuid_ : *default_instance_->uuid_;
}
inline ::alarm_center_video::zone_uuid* bind_info::mutable_uuid() {
  
  if (uuid_ == NULL) {
    uuid_ = new ::alarm_center_video::zone_uuid;
  }
  // @@protoc_insertion_point(field_mutable:alarm_center_video.bind_info.uuid)
  return uuid_;
}
inline ::alarm_center_video::zone_uuid* bind_info::release_uuid() {
  // @@protoc_insertion_point(field_release:alarm_center_video.bind_info.uuid)
  
  ::alarm_center_video::zone_uuid* temp = uuid_;
  uuid_ = NULL;
  return temp;
}
inline void bind_info::set_allocated_uuid(::alarm_center_video::zone_uuid* uuid) {
  delete uuid_;
  uuid_ = uuid;
  if (uuid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.bind_info.uuid)
}

// optional .alarm_center_video.dev_info dev = 2;
inline bool bind_info::has_dev() const {
  return !_is_default_instance_ && dev_ != NULL;
}
inline void bind_info::clear_dev() {
  if (GetArenaNoVirtual() == NULL && dev_ != NULL) delete dev_;
  dev_ = NULL;
}
inline const ::alarm_center_video::dev_info& bind_info::dev() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.bind_info.dev)
  return dev_ != NULL ? *dev_ : *default_instance_->dev_;
}
inline ::alarm_center_video::dev_info* bind_info::mutable_dev() {
  
  if (dev_ == NULL) {
    dev_ = new ::alarm_center_video::dev_info;
  }
  // @@protoc_insertion_point(field_mutable:alarm_center_video.bind_info.dev)
  return dev_;
}
inline ::alarm_center_video::dev_info* bind_info::release_dev() {
  // @@protoc_insertion_point(field_release:alarm_center_video.bind_info.dev)
  
  ::alarm_center_video::dev_info* temp = dev_;
  dev_ = NULL;
  return temp;
}
inline void bind_info::set_allocated_dev(::alarm_center_video::dev_info* dev) {
  delete dev_;
  dev_ = dev;
  if (dev) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.bind_info.dev)
}

// optional bool bind = 3;
inline void bind_info::clear_bind() {
  bind_ = false;
}
inline bool bind_info::bind() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.bind_info.bind)
  return bind_;
}
inline void bind_info::set_bind(bool value) {
  
  bind_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.bind_info.bind)
}

// optional bool auto_popup = 4;
inline void bind_info::clear_auto_popup() {
  auto_popup_ = false;
}
inline bool bind_info::auto_popup() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.bind_info.auto_popup)
  return auto_popup_;
}
inline void bind_info::set_auto_popup(bool value) {
  
  auto_popup_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.bind_info.auto_popup)
}

// -------------------------------------------------------------------

// hisroty_record

// optional int32 ademco_id = 1;
inline void hisroty_record::clear_ademco_id() {
  ademco_id_ = 0;
}
inline ::google::protobuf::int32 hisroty_record::ademco_id() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.hisroty_record.ademco_id)
  return ademco_id_;
}
inline void hisroty_record::set_ademco_id(::google::protobuf::int32 value) {
  
  ademco_id_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.hisroty_record.ademco_id)
}

// optional int32 zone_value = 2;
inline void hisroty_record::clear_zone_value() {
  zone_value_ = 0;
}
inline ::google::protobuf::int32 hisroty_record::zone_value() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.hisroty_record.zone_value)
  return zone_value_;
}
inline void hisroty_record::set_zone_value(::google::protobuf::int32 value) {
  
  zone_value_ = value;
  // @@protoc_insertion_point(field_set:alarm_center_video.hisroty_record.zone_value)
}

// optional string record = 3;
inline void hisroty_record::clear_record() {
  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hisroty_record::record() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.hisroty_record.record)
  return record_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hisroty_record::set_record(const ::std::string& value) {
  
  record_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarm_center_video.hisroty_record.record)
}
inline void hisroty_record::set_record(const char* value) {
  
  record_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarm_center_video.hisroty_record.record)
}
inline void hisroty_record::set_record(const char* value, size_t size) {
  
  record_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarm_center_video.hisroty_record.record)
}
inline ::std::string* hisroty_record::mutable_record() {
  
  // @@protoc_insertion_point(field_mutable:alarm_center_video.hisroty_record.record)
  return record_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hisroty_record::release_record() {
  // @@protoc_insertion_point(field_release:alarm_center_video.hisroty_record.record)
  
  return record_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hisroty_record::set_allocated_record(::std::string* record) {
  if (record != NULL) {
    
  } else {
    
  }
  record_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record);
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.hisroty_record.record)
}

// optional string timestamp = 4;
inline void hisroty_record::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hisroty_record::timestamp() const {
  // @@protoc_insertion_point(field_get:alarm_center_video.hisroty_record.timestamp)
  return timestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hisroty_record::set_timestamp(const ::std::string& value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarm_center_video.hisroty_record.timestamp)
}
inline void hisroty_record::set_timestamp(const char* value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarm_center_video.hisroty_record.timestamp)
}
inline void hisroty_record::set_timestamp(const char* value, size_t size) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarm_center_video.hisroty_record.timestamp)
}
inline ::std::string* hisroty_record::mutable_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:alarm_center_video.hisroty_record.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hisroty_record::release_timestamp() {
  // @@protoc_insertion_point(field_release:alarm_center_video.hisroty_record.timestamp)
  
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hisroty_record::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    
  } else {
    
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:alarm_center_video.hisroty_record.timestamp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace alarm_center_video

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_alarm_5fcenter_5fvideo_2eproto__INCLUDED
